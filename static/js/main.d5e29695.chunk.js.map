{"version":3,"sources":["Board/theme.ts","Board/Grid.jsx","Board/svg.ts","Board/index.tsx","engine/ui.ts","engine/engine.ts","engine/index.ts","zip/index.ts","tutorial.tsx","ui.tsx","index.tsx","code.ts"],"names":["colors","HIGHLIGHT_DIM","DEAD_OPACITY","CELL_SIZE","CELL_SPACING","toGridSpaceWidth","slot","toGridSpaceHeight","getPartWidth","part","extraWidth","direction","getPartHeight","extraHeight","getPartXOffset","xBias","x","getPartYOffset","yBias","y","getOpacity","snake","highlightedSnake","_id","isDead","range","size","result","i","push","Grid","snakeIndex","partIndex","type","this","renderHeadPart","renderTailPart","renderMiddlePart","highlighted","getHeadXOffset","getHeadYOffset","box","headSvg","viewBox","baseVal","transform","halfX","width","halfY","height","concat","getHeadTransform","viewBoxStr","react_default","a","createElement","key","fill","color","opacity","shapeRendering","dangerouslySetInnerHTML","__html","innerHTML","shouldRender","getTailXOffset","getTailYOffset","tailSvg","getTailTransform","_this","unsortedSnakes","props","snakes","food","sortedSnakes","sort","b","viewBoxWidth","columns","viewBoxHeight","rows","maxWidth","maxHeight","map","_","row","col","body","renderPart","f","foodIndex","cx","cy","r","renderGrid","React","Component","makeDom","svgText","wrapper","document","trim","firstChild","styles","Board","style","display","margin","Board_Grid","toUIFrame","move","turn","game","board","you","id","name","health","death","idx","partIdx","next","Object","objectSpread","getDirection","headDirection","isCovered","getType","formatBody","length","initialFrame","run","_x","_x2","_x3","_run","apply","arguments","_callee","code","canceller","emit","start","frame","foodIdx","regenerator_default","wrap","_context","prev","obj","JSON","parse","stringify","cancelled","abrupt","toMoveAPI","moveTransform","ateFood","splice","unshift","sleep","stop","head","findIndex","MoveError","_Error","message","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inherits","wrapNativeSuper","Error","offBoard","assign","forEach","ms","undefined","Promise","setTimeout","engineInitialFrame","lambda","js","file","Zip","generateAsync","then","val","saveAs","heroku","title","targets","Title","_ref","className","disabled","onClick","Body","react_markdown_default","source","src","children","tutorials","Fragment","target","Logo","react","xmlns","d","basicSnake","placeholder","App","fn","initial","localStorage","getItem","editor","state","tutorial","parseInt","engine","componentDidMount","handleStart","handleInit","onDidChangeModelContent","handleCodeChange","getValue","handleSetTutorial","change","setState","setItem","toString","handleNext","handlePrev","handleReset","running","handleStop","asyncToGenerator","mark","Function","assertThisInitialized","error","t0","console","log","_this2","_this$state","Tutorial","href","ui_Logo","lib_default","value","editorDidMount","ref","language","theme","options","minimap","enabled","scrollbar","vertical","verticalScrollbarSize","src_Board","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.d5e29695.chunk.js","sourcesContent":["export const colors = {\r\n  pageBackground: \"#202124\",\r\n  gridBackground: \"#202124\",\r\n  cellBackground: \"#393e42\",\r\n  healthBarDeathBackground: \"#333\",\r\n  food: \"#ff5a72\",\r\n  healthBar: \"#0f0\",\r\n  healthBarOutline: \"#555\",\r\n  lightText: \"#fff\",\r\n  darkText: \"#000\",\r\n\r\n  // colour names\r\n  white: \"#fff\",\r\n};\r\n","import React from \"react\";\r\nimport { colors } from \"./theme\";\r\n\r\nconst HIGHLIGHT_DIM = 0.25;\r\nconst DEAD_OPACITY = 0.15;\r\nconst CELL_SIZE = 20;\r\nconst CELL_SPACING = 4;\r\n\r\nfunction toGridSpaceWidth(slot) {\r\n  return (CELL_SIZE + CELL_SPACING) * slot + CELL_SPACING;\r\n}\r\nfunction toGridSpaceHeight(slot) {\r\n  return (CELL_SIZE + CELL_SPACING) * (9-slot) + CELL_SPACING ;\r\n}\r\n\r\nfunction getPartWidth(part) {\r\n  const extraWidth =\r\n    part.direction === \"left\" || part.direction === \"right\" ? CELL_SPACING : 0;\r\n  return CELL_SIZE + extraWidth + \"px\";\r\n}\r\n\r\nfunction getPartHeight(part) {\r\n  const extraHeight =\r\n    part.direction === \"up\" || part.direction === \"down\" ? CELL_SPACING : 0;\r\n  return CELL_SIZE + extraHeight + \"px\";\r\n}\r\n\r\nfunction getPartXOffset(part) {\r\n  const xBias = part.direction === \"left\" ? -CELL_SPACING : 0;\r\n  return toGridSpaceWidth(part.x) + xBias;\r\n}\r\n\r\nfunction getPartYOffset(part) {\r\n  const yBias = part.direction === \"down\" ? -CELL_SPACING : 0;\r\n  return toGridSpaceHeight(part.y) + yBias;\r\n}\r\n\r\nfunction getTailXOffset(part) {\r\n  switch (part.direction) {\r\n    case \"left\":\r\n      return toGridSpaceWidth(part.x) - CELL_SPACING;\r\n    case \"right\":\r\n      return toGridSpaceWidth(part.x) + CELL_SPACING;\r\n    default:\r\n      return toGridSpaceWidth(part.x);\r\n  }\r\n}\r\n\r\nfunction getTailYOffset(part) {\r\n  switch (part.direction) {\r\n    case \"up\":\r\n      return toGridSpaceHeight(part.y) + CELL_SPACING;\r\n    case \"down\":\r\n      return toGridSpaceHeight(part.y) - CELL_SPACING;\r\n    default:\r\n      return toGridSpaceHeight(part.y);\r\n  }\r\n}\r\n\r\nfunction getHeadXOffset(part) {\r\n  switch (part.direction) {\r\n    case \"left\":\r\n      return toGridSpaceWidth(part.x);\r\n    case \"right\":\r\n      return toGridSpaceWidth(part.x);\r\n    default:\r\n      return toGridSpaceWidth(part.x);\r\n  }\r\n}\r\n\r\nfunction getHeadYOffset(part) {\r\n  switch (part.direction) {\r\n    case \"up\":\r\n      return toGridSpaceHeight(part.y);\r\n    case \"down\":\r\n      return toGridSpaceHeight(part.y);\r\n    default:\r\n      return toGridSpaceHeight(part.y);\r\n  }\r\n}\r\n\r\nfunction getOpacity(snake, highlightedSnake) {\r\n  if (highlightedSnake) {\r\n    return snake._id === highlightedSnake ? 1 : HIGHLIGHT_DIM;\r\n  }\r\n\r\n  return snake.isDead ? DEAD_OPACITY : 1;\r\n}\r\n\r\nfunction range(size) {\r\n  const result = [];\r\n  for (let i = 0; i < size; i++) {\r\n    result.push(i);\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction sortAliveSnakesOnTop(snakes) {\r\n  return snakes.concat().sort((a, b) => {\r\n    const aOrder = a.isDead ? 0 : 1;\r\n    const bOrder = b.isDead ? 0 : 1;\r\n    return aOrder - bOrder;\r\n  });\r\n}\r\n\r\nfunction getHeadTransform(direction, viewBox) {\r\n  const halfX = viewBox.width / 2;\r\n  const halfY = viewBox.height / 2;\r\n  switch (direction) {\r\n    case \"left\":\r\n      return `rotate(180 ${halfX} ${halfY})`;\r\n    case \"up\":\r\n      return `rotate(90 ${halfX} ${halfY})`;\r\n    case \"down\":\r\n      return `rotate(-90 ${halfX} ${halfY})`;\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n\r\nfunction getTailTransform(direction, viewBox) {\r\n  const halfX = viewBox.width / 2;\r\n  const halfY = viewBox.height / 2;\r\n  switch (direction) {\r\n    case \"right\":\r\n      return `rotate(180 ${halfX} ${halfY})`;\r\n    case \"down\":\r\n      return `rotate(90 ${halfX} ${halfY})`;\r\n    case \"up\":\r\n      return `rotate(-90 ${halfX} ${halfY})`;\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n\r\nclass Grid extends React.Component {\r\n  renderPart(snake, snakeIndex, part, partIndex, highlightedSnake) {\r\n    switch (part.type) {\r\n      case \"head\":\r\n        return this.renderHeadPart(snake, snakeIndex, part, highlightedSnake);\r\n      case \"tail\":\r\n        return this.renderTailPart(snake, snakeIndex, part, highlightedSnake);\r\n      default:\r\n        return this.renderMiddlePart(\r\n          snake,\r\n          snakeIndex,\r\n          part,\r\n          partIndex,\r\n          highlightedSnake\r\n        );\r\n    }\r\n  }\r\n\r\n  renderHeadPart(snake, snakeIndex, part, highlighted) {\r\n    const x = getHeadXOffset(part);\r\n    const y = getHeadYOffset(part);\r\n    const box = snake.headSvg.viewBox.baseVal;\r\n    const transform = getHeadTransform(part.direction, box);\r\n    const viewBoxStr = `${box.x} ${box.y} ${box.width} ${box.height}`;\r\n\r\n    return (\r\n      <svg\r\n        key={\"part\" + snakeIndex + \",head\"}\r\n        fill={snake.color}\r\n        width={CELL_SIZE + \"px\"}\r\n        height={CELL_SIZE + \"px\"}\r\n        x={x}\r\n        y={y}\r\n        viewBox={viewBoxStr}\r\n        opacity={getOpacity(snake, highlighted)}\r\n        shapeRendering=\"optimizeSpeed\"\r\n      >\r\n        <g\r\n          transform={transform}\r\n          dangerouslySetInnerHTML={{ __html: snake.headSvg.innerHTML }}\r\n        />\r\n      </svg>\r\n    );\r\n  }\r\n\r\n  renderMiddlePart(snake, snakeIndex, part, partIndex, highlighted) {\r\n    if (!part.shouldRender) {\r\n      return (\r\n        <svg\r\n          key={\"part\" + snakeIndex + \",\" + partIndex}\r\n          shapeRendering=\"optimizeSpeed\"\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <rect\r\n        key={`part${snakeIndex},${part.x},${part.y}`}\r\n        x={getPartXOffset(part)}\r\n        y={getPartYOffset(part)}\r\n        width={getPartWidth(part)}\r\n        height={getPartHeight(part)}\r\n        opacity={getOpacity(snake, highlighted)}\r\n        fill={snake.color}\r\n        shapeRendering=\"optimizeSpeed\"\r\n      />\r\n    );\r\n  }\r\n\r\n  renderTailPart(snake, snakeIndex, part, highlighted) {\r\n    const x = getTailXOffset(part);\r\n    const y = getTailYOffset(part);\r\n    const box = snake.tailSvg.viewBox.baseVal;\r\n    const transform = getTailTransform(part.direction, box);\r\n    const viewBoxStr = `${box.x} ${box.y} ${box.width} ${box.height}`;\r\n\r\n    if (!part.shouldRender) {\r\n      return (\r\n        <svg\r\n          key={\"part\" + snakeIndex + \",tail\"}\r\n          shapeRendering=\"optimizeSpeed\"\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <svg\r\n        key={\"part\" + snakeIndex + \",tail\"}\r\n        fill={snake.color}\r\n        width={CELL_SIZE}\r\n        height={CELL_SIZE}\r\n        x={x}\r\n        y={y}\r\n        viewBox={viewBoxStr}\r\n        opacity={getOpacity(snake, highlighted)}\r\n        shapeRendering=\"optimizeSpeed\"\r\n      >\r\n        <g\r\n          transform={transform}\r\n          dangerouslySetInnerHTML={{ __html: snake.tailSvg.innerHTML }}\r\n        />\r\n      </svg>\r\n    );\r\n  }\r\n\r\n  renderGrid() {\r\n    const unsortedSnakes = this.props.snakes || [];\r\n    const food = this.props.food || [];\r\n\r\n    // Make alive snakes render on top of dead snakes\r\n    const sortedSnakes = sortAliveSnakesOnTop(unsortedSnakes);\r\n\r\n    const viewBoxWidth = toGridSpaceWidth(this.props.columns);\r\n    const viewBoxHeight = toGridSpaceWidth(this.props.rows);\r\n\r\n    return (\r\n      <svg\r\n        width={this.props.maxWidth}\r\n        height={this.props.maxHeight}\r\n        x={this.props.x}\r\n        y={this.props.y}\r\n        viewBox={`0 0 ${viewBoxWidth} ${viewBoxHeight}`}\r\n      >\r\n        <rect\r\n          width={viewBoxWidth}\r\n          height={viewBoxHeight}\r\n          fill={colors.gridBackground}\r\n          opacity={this.props.highlightedSnake ? HIGHLIGHT_DIM : null}\r\n          shapeRendering=\"optimizeSpeed\"\r\n        />\r\n\r\n        {range(this.props.rows).map((_, row) =>\r\n          range(this.props.columns).map((_, col) => (\r\n            <rect\r\n              key={\"cell\" + row + \",\" + col}\r\n              x={toGridSpaceWidth(col)}\r\n              y={toGridSpaceWidth(row)}\r\n              width={CELL_SIZE}\r\n              height={CELL_SIZE}\r\n              fill={colors.cellBackground}\r\n              opacity={this.props.highlightedSnake ? HIGHLIGHT_DIM : null}\r\n              shapeRendering=\"optimizeSpeed\"\r\n            />\r\n          ))\r\n        )}\r\n\r\n        {sortedSnakes.map((snake, snakeIndex) => {\r\n          return snake.body.map((part, partIndex) =>\r\n            this.renderPart(\r\n              snake,\r\n              snakeIndex,\r\n              part,\r\n              partIndex,\r\n              this.props.highlightedSnake\r\n            )\r\n          );\r\n        })}\r\n\r\n        {food.map((f, foodIndex) => (\r\n          <circle\r\n            key={\"food\" + foodIndex}\r\n            cx={toGridSpaceWidth(f.x) + CELL_SIZE / 2}\r\n            cy={toGridSpaceHeight(f.y) + CELL_SIZE / 2}\r\n            r={CELL_SIZE / 2}\r\n            fill={colors.food}\r\n            opacity={this.props.highlightedSnake ? HIGHLIGHT_DIM : null}\r\n            shapeRendering=\"optimizeQuality\"\r\n          />\r\n        ))}\r\n      </svg>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.props.snakes) {\r\n      return this.renderGrid();\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Grid;\r\n","const head = `\r\n<svg id=\"root\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <circle fill=\"none\" cx=\"12.52\" cy=\"28.55\" r=\"9.26\"/>\r\n    <path d=\"M0 100h100L56 55.39l44-39.89V.11L0 0zm12.52-80.71a9.26 9.26 0 1 1-9.26 9.26 9.26 9.26 0 0 1 9.26-9.26z\"/>\r\n</svg>\r\n`;\r\n\r\nconst tail = `\r\n<svg id=\"root\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M50 0H0v100h50l50-50L50 0z\"/>\r\n</svg>\r\n`;\r\n\r\nexport const headSvg = makeDom(head);\r\nexport const tailSvg = makeDom(tail);\r\n\r\nfunction makeDom(svgText: string) {\r\n  const wrapper = document.createElement(\"div\");\r\n  wrapper.innerHTML = svgText.trim();\r\n  return wrapper.firstChild;\r\n}\r\n","import React from \"react\";\r\nimport Grid from \"./Grid\";\r\nimport { colors } from \"./theme\";\r\nimport { Snake, Food } from \"../engine\";\r\nimport { headSvg, tailSvg } from \"./svg\";\r\n\r\nconst styles = {\r\n  width: \"100%\",\r\n  height: \"85%\",\r\n};\r\n\r\ninterface BoardProps {\r\n  food: Food[];\r\n  columns: number;\r\n  rows: number;\r\n  snakes: Snake[];\r\n}\r\n\r\nclass Board extends React.Component<BoardProps> {\r\n  render() {\r\n    const snakes = this.props.snakes.map((snake: any) => {\r\n      snake.headSvg = headSvg;\r\n      snake.tailSvg = tailSvg;\r\n      return snake;\r\n    });\r\n    return (\r\n      <svg\r\n        style={{ display: \"block\", margin: \"auto\" }}\r\n        viewBox=\"0 0 90 90\"\r\n        height={styles.height}\r\n        width={styles.width}\r\n      >\r\n        <rect x=\"0\" y=\"0\" width=\"90\" height=\"90\" fill={colors.pageBackground} />\r\n\r\n        <Grid\r\n          snakes={snakes}\r\n          food={this.props.food}\r\n          columns={this.props.columns}\r\n          rows={this.props.rows}\r\n          maxWidth={90}\r\n          maxHeight={90}\r\n          x={0}\r\n          y={0}\r\n        />\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import { MoveAPI, Snake as SnakeAPI, Point } from \"./types\";\r\n\r\nexport interface UISnakePoint {\r\n  x: number;\r\n  y: number;\r\n  type: string;\r\n  shouldRender: boolean;\r\n  direction: string;\r\n}\r\n\r\nexport interface UISnake {\r\n  _id: string;\r\n  color: string;\r\n  body: UISnakePoint[];\r\n  name: string;\r\n  health: number;\r\n  isDead: boolean;\r\n  death?: { cause: string; turn: number };\r\n}\r\n\r\nexport interface UIFrame {\r\n  turn: number;\r\n  game: {\r\n    width: number;\r\n    height: number;\r\n  };\r\n  snake: UISnake;\r\n  food: Point[];\r\n}\r\n\r\nexport function toUIFrame(move: MoveAPI): UIFrame {\r\n  return {\r\n    turn: move.turn,\r\n    game: {\r\n      width: move.board.width,\r\n      height: move.board.height,\r\n    },\r\n    snake: {\r\n      _id: move.you.id,\r\n      color: move.you.color,\r\n      name: move.you.name,\r\n      health: move.you.health,\r\n      isDead: !!move.you.death,\r\n      death: move.you.death,\r\n      body: move.you.body.map((_, idx) => formatBody(move.you, idx)),\r\n    },\r\n    food: move.board.food,\r\n  };\r\n}\r\n\r\nfunction formatBody(snake: SnakeAPI, partIdx: number): UISnakePoint {\r\n  const part = snake.body[partIdx];\r\n  const next = snake.body[partIdx - 1];\r\n  return {\r\n    ...part,\r\n    direction: next ? getDirection(part, next) : headDirection(snake),\r\n    shouldRender: !isCovered(snake, partIdx),\r\n    type: getType(snake, partIdx),\r\n  };\r\n}\r\n\r\nfunction getDirection(a: Point, b: Point) {\r\n  if (a.x < b.x) {\r\n    return \"right\";\r\n  } else if (b.x < a.x) {\r\n    return \"left\";\r\n  } else if (a.y < b.y) {\r\n    return \"down\";\r\n  }\r\n  return \"up\";\r\n}\r\n\r\nfunction headDirection(snake: SnakeAPI) {\r\n  return snake.body.length > 1\r\n    ? getDirection(snake.body[1], snake.body[0])\r\n    : \"up\";\r\n}\r\n\r\nfunction isCovered(snake: SnakeAPI, partIndex: number) {\r\n  const part = snake.body[partIndex];\r\n  const next = snake.body[partIndex - 1];\r\n\r\n  return next && next.x === part.x && next.y === part.y;\r\n}\r\n\r\nfunction getType(snake: SnakeAPI, partIndex: number) {\r\n  if (partIndex === 0) {\r\n    return \"head\";\r\n  }\r\n\r\n  if (partIndex === snake.body.length - 1) {\r\n    return \"tail\";\r\n  }\r\n\r\n  return \"body\";\r\n}\r\n","import { Point, Snake, MoveAPI } from \"./types\";\r\nimport { Code } from \"../code\";\r\nimport { toUIFrame, UIFrame } from \"./ui\";\r\n\r\nexport interface Frame {\r\n  width: number;\r\n  height: number;\r\n  turn: number;\r\n  snake: Snake;\r\n  food: Point[];\r\n}\r\n\r\nexport const initialFrame: Frame = {\r\n  turn: 1,\r\n  width: 10,\r\n  height: 10,\r\n  food: [\r\n    {\r\n      x: 3,\r\n      y: 2,\r\n    },\r\n    {\r\n      x: 1,\r\n      y: 7,\r\n    },\r\n    {\r\n      x: 7,\r\n      y: 8,\r\n    },\r\n    {\r\n      x: 8,\r\n      y: 1,\r\n    },\r\n  ],\r\n  snake: {\r\n    id: \"test\",\r\n    name: \"test\",\r\n    health: 25,\r\n    color: \"grey\",\r\n    body: [\r\n      {\r\n        x: 5,\r\n        y: 6,\r\n      },\r\n      {\r\n        x: 5,\r\n        y: 5,\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\ninterface Canceller {\r\n  cancelled(): boolean;\r\n}\r\n\r\nexport async function run(\r\n  code: Code,\r\n  canceller: Canceller,\r\n  emit: (frame: UIFrame) => void\r\n) {\r\n  const start: Frame = deepCopy(initialFrame);\r\n  start.snake.color = code.start({}).color;\r\n\r\n  let turn = 1;\r\n  let frame = start;\r\n  while (true) {\r\n    if (canceller.cancelled()) {\r\n      return;\r\n    }\r\n\r\n    frame = { ...frame, turn };\r\n    const move = code.move(toMoveAPI(frame)).move;\r\n    const next = moveTransform(frame, move);\r\n    const foodIdx = ateFood(next, frame.food);\r\n\r\n    if (foodIdx != -1) {\r\n      // Add food to the array and leave the body intact.\r\n      frame.food.splice(foodIdx, 1);\r\n    } else {\r\n      // Remove the last item from the body.\r\n      frame.snake.body.splice(frame.snake.body.length - 1, 1);\r\n    }\r\n    frame.snake.body.unshift(next);\r\n\r\n    emit(toUIFrame(toMoveAPI(frame)));\r\n\r\n    await sleep(400);\r\n    turn++;\r\n  }\r\n}\r\n\r\nfunction ateFood(head: Point, food: Point[]) {\r\n  return food.findIndex((f) => f.x === head.x && f.y === head.y);\r\n}\r\n\r\nexport class MoveError extends Error {\r\n  turn: number;\r\n\r\n  constructor(message: string, turn: number) {\r\n    super(message);\r\n    this.turn = turn;\r\n  }\r\n}\r\n\r\n/**\r\n * Move transform takes the current snake and move and writes out a new head.\r\n * it will copy the current head as a base. It will throw an error if the move\r\n * is off the board.\r\n */\r\nfunction moveTransform(frame: Frame, move: string): Point {\r\n  const { snake, turn, height, width } = frame;\r\n\r\n  const offBoard = () => {\r\n    throw new MoveError(`Snake moved off the board!`, turn);\r\n  };\r\n\r\n  const head = Object.assign({}, snake.body[0]);\r\n  switch (move) {\r\n    case \"up\":\r\n      head.y += 1;\r\n      if (head.y  >= height) offBoard();\r\n      break;\r\n    case \"down\":\r\n      head.y -= 1;\r\n      if (head.y < 0 ) offBoard();\r\n      break;\r\n    case \"left\":\r\n      head.x -= 1;\r\n      if (head.x < 0) offBoard();\r\n      break;\r\n    case \"right\":\r\n      head.x += 1;\r\n      if (head.x >= width) offBoard();\r\n      break;\r\n    default:\r\n      throw new MoveError(`Unkown move \"${move}\"`, turn);\r\n  }\r\n   \r\n\r\n\r\n  snake.body.forEach((part) => {\r\n    if (part.x === head.x && part.y === head.y)\r\n      throw new MoveError(`Snake moved into itself!`, turn);\r\n  });\r\n\r\n  return head;\r\n}\r\n\r\nfunction sleep(ms = 0) {\r\n  return new Promise((r) => setTimeout(r, ms));\r\n}\r\n\r\nexport function toMoveAPI(frame: Frame): MoveAPI {\r\n  return {\r\n    game: {\r\n      id: \"test\",\r\n    },\r\n    turn: frame.turn,\r\n    board: {\r\n      height: frame.height,\r\n      width: frame.width,\r\n      food: frame.food,\r\n      snakes: [frame.snake],\r\n    },\r\n    you: frame.snake,\r\n  };\r\n}\r\n\r\nfunction deepCopy(obj: any) {\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\n","import { UIFrame, UISnake, toUIFrame } from \"./ui\";\r\nimport { Point } from \"./types\";\r\nimport { toMoveAPI, initialFrame as engineInitialFrame } from \"./engine\";\r\n\r\nexport type Frame = UIFrame;\r\nexport type Snake = UISnake;\r\nexport type Food = Point;\r\n\r\nexport { run } from \"./engine\";\r\nexport const initialFrame = toUIFrame(toMoveAPI(engineInitialFrame));\r\n","import Zip from \"jszip\";\r\nimport raw from \"raw.macro\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nfunction lambda(js: string) {\r\n  const file = new Zip();\r\n  file.file(\"README.md\", raw(\"./lambda/README.md\"));\r\n  file.file(\"template.yml\", raw(\"./lambda/template.yml\"));\r\n  file.file(\"samconfig.toml\", raw(\"./lambda/samconfig.toml\"));\r\n  file.file(\"index.js\", js + \"\\n\" + raw(\"./lambda/index.js\"));\r\n\r\n  file.generateAsync({ type: \"blob\" }).then((val) => {\r\n    saveAs(val, \"lambda.zip\");\r\n  });\r\n}\r\n\r\nlambda.title = \"AWS Lambda\";\r\n\r\nfunction heroku(js: string) {\r\n  const file = new Zip();\r\n  file.file(\"README.md\", raw(\"./heroku/README.md\"));\r\n  file.file(\"package.json\", raw(\"./heroku/package.json\"));\r\n  file.file(\"index.js\", js + \"\\n\" + raw(\"./heroku/index.js\"));\r\n\r\n  file.generateAsync({ type: \"blob\" }).then((val) => {\r\n    saveAs(val, \"heroku.zip\");\r\n  });\r\n}\r\n\r\nheroku.title = \"Heroku\";\r\n\r\nexport const targets = [lambda, heroku];\r\n","import React, { useState } from \"react\";\r\nimport Markdown from \"react-markdown\";\r\nimport raw from \"raw.macro\";\r\nimport { targets } from \"./zip\";\r\n\r\nexport interface Props {\r\n  code: string;\r\n  next?: () => void;\r\n  prev?: () => void;\r\n}\r\n\r\nfunction Title({ next, prev, title }: Props & { title: string }) {\r\n  return (\r\n    <header className=\"border-bottom d-flex p-3\">\r\n      <div className=\"flex-auto f2-light border-none\">{title}</div>\r\n      <div className=\"BtnGroup\">\r\n        <button\r\n          disabled={!prev}\r\n          className=\"btn btn-outline BtnGroup-item\"\r\n          onClick={prev}\r\n        >\r\n          &lt; Back\r\n        </button>\r\n        <button\r\n          className=\"btn btn-outline BtnGroup-item\"\r\n          disabled={!next}\r\n          onClick={next}\r\n        >\r\n          Next &gt;\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nfunction Body(props: { src: string; children?: any }) {\r\n  return (\r\n    <div className=\"markdown-body overflow-scroll p-3 flex-auto height-page2\">\r\n      <Markdown source={props.src} />\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const Landing = (props: Props) => (\r\n  <>\r\n    <Title {...props} title=\"Welcome to Battlesnake!\" />\r\n    <Body src={raw(\"./tutorials/landing.md\")} />\r\n  </>\r\n);\r\n\r\nexport const MoveCommand = (props: Props) => (\r\n  <>\r\n    <Title {...props} title=\"Moving your Snake\" />\r\n    <Body src={raw(\"./tutorials/move-command.md\")} />\r\n  </>\r\n);\r\n\r\nexport const AvoidWalls = (props: Props) => (\r\n  <>\r\n    <Title {...props} title=\"Avoiding Walls\" />\r\n    <Body src={raw(\"./tutorials/avoiding-walls.md\")} />\r\n  </>\r\n);\r\n\r\nexport const AvoidSelf = (props: Props) => (\r\n  <>\r\n    <Title {...props} title=\"Avoiding Yourself\" />\r\n    <Body src={raw(\"./tutorials/avoiding-self.md\")} />\r\n  </>\r\n);\r\n\r\nexport const Introduction = (props: Props) => (\r\n  <>\r\n    <Title {...props} title=\"Battlesnake Basics\" />\r\n    <Body src={raw(\"./tutorials/introduction.md\")} />\r\n  </>\r\n);\r\n\r\nexport const Download = (props: Props) => (\r\n  <>\r\n    <Title {...props} title=\"Download your Snake!\" />\r\n    <Body src={raw(\"./tutorials/deployment.md\")}>\r\n      <div className=\"BtnGroup d-flex flex-justify-center p-3\">\r\n        {targets.map((target) => (\r\n          <button\r\n            key={target.name}\r\n            className=\"btn BtnGroup-item\"\r\n            onClick={() => target(props.code)}\r\n          >\r\n            {target.title}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </Body>\r\n  </>\r\n);\r\n\r\nexport const tutorials = [\r\n  Landing,\r\n  Introduction,\r\n  MoveCommand,\r\n  AvoidWalls,\r\n  AvoidSelf,\r\n  Download,\r\n];\r\n","import * as React from \"react\";\r\n\r\nexport const Logo = () => (\r\n  <svg\r\n    height=\"50px\"\r\n    style={{ color: \"white\" }}\r\n    fill=\"currentColor\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 503 184\"\r\n  >\r\n    <path d=\"M305.5 102.7h-36.1v-71H253v71h-36.2v-71h-27L178.2.7h146.5l-.7 31h-18.5zm-33-3h30v-71H321l.6-25h-139l9.3 25h28v71h30v-71h22.6zm226 84.5l-133.3-72.5 34.2-34.8L365.9.3l134-.1V13l-22 15.5L502.5 50h-60.8L459 87.3 439.6 107zm-128.2-73.3l117 63.7-51.8-67.8 19.8-20.1-18.5-39.8h57.4l-21.3-18.7 24-16.8V3.2l-126.3.2L403 77.6zm87-87a7.3 7.3 0 1 1 7.3-7.2 7.3 7.3 0 0 1-7.3 7.2zm0-11.5a4.2 4.2 0 1 0 4.2 4.3 4.2 4.2 0 0 0-4.2-4.3z\"></path>\r\n    <path d=\"M134.8 104l-27.2-27.6 32-76.4h34.8l43 102.7h-39.3l-5.3-13.3h-32.5zm45.4-4.4h32.5L172.3 3.1h-30.7l-30.4 72.6 22.4 22.7 4.6-12H175zM167.9 66h-22.5l11.3-30zm-18-3h13.6l-6.8-18.2zm219.6 39.7h-42.3V30.3l.7-29.6h35.3V66h28l4.7 10.7zm-39.3-3h38l24-23.8-3-6.9h-29V3.8h-29.4l-.6 26.6z\"></path>\r\n    <path d=\"M3.9 184.2L62.8 107 43.4 87.3 60.7 50H0l24.7-21.5L2.4 13V.2l59.3.1h74.7L103 77l34.2 34.8-1.8 1zm43.2-97.5l19.7 20-51.6 68 117-63.7-32.8-33.3.4-1 32-73.3H5.5v8l24 16.9L8.2 46.9h57.5zm-2-62.8a7.3 7.3 0 1 1 7.2-7.3 7.3 7.3 0 0 1-7.3 7.3zm0-11.5a4.2 4.2 0 1 0 4.1 4.2 4.2 4.2 0 0 0-4.2-4.2zM210.7 118a.2.2 0 0 1-.2 0v-.1a.2.2 0 0 1 .2.2zm4.6-45.5a49.2 49.2 0 0 0 3.5 7.6l1.4 2.6-3.3-9.7a1.1 1.1 0 0 0-1.6-.6z\"></path>\r\n    <path d=\"M223.2 94.4a1 1 0 0 0-1.2-.3l-.4-.7c-2.9-3.3-5.7-6.8-8.8-10a1 1 0 0 0-.5.8l-.5 3a2 2 0 0 0 0 .3l-1.7 11a1.1 1.1 0 0 0 .6 1.1 5.5 5.5 0 0 1-.7 1.8l.3 5v3.4a1.2 1.2 0 0 0 0 .4v.5a.7.7 0 0 0-.1.1 1.2 1.2 0 0 0 0 .4c0 .1-.1 0 0 .1v.6c0 .2 0 0 0 0a2 2 0 0 1 0 .6v1.3s-.1 0 0 0a1 1 0 0 1 0 .2v.2a.4.4 0 0 0 0 .3s-.2.1 0 .2-.1 0 0 0l-.2 1.3v1.2h.1c.1 0 0 0 0 .2a.5.5 0 0 1 0 .2.5.5 0 0 1 .2.1v.3c0 .1 0 0 0 0h.4c.2 0 0 0 0 0h.1v1a30 30 0 0 1-1.4 7.2l-.5 1.1a148.2 148.2 0 0 0-6.2-17.1l-.4-2.2c.1-.2.3-.2.5-.2a2.7 2.7 0 0 1-.4-.9 3 3 0 0 1 0-.5 1 1 0 0 0-.1-.4 2.6 2.6 0 0 0-.4-.4v-.3a.2.2 0 0 1 .2 0c.2 0 .3-.1.3-.5a12.4 12.4 0 0 0-.9-2c-.6-4.5-1.2-9-1.6-13.5a1.1 1.1 0 0 0-1.2-1l-.2-.7a1.1 1.1 0 0 0-.4-.5l-.5.4a96 96 0 0 1-11.6 12.7l-2.1 3.4a1.2 1.2 0 0 0-.1.1 1.9 1.9 0 0 1 1.3 1.4 1.1 1.1 0 0 0 .6-.5l.6-.7q-1.1 6-2.4 11.8l-2 9a45.2 45.2 0 0 0-1.5 8.7.4.4 0 0 0 .4.4 391 391 0 0 1-1 4.7.9.9 0 0 0-.4 1 11 11 0 0 0 1.9 3.8l1.4 2.5 2.2 3.4a20.3 20.3 0 0 0 2.4 2.9 7.1 7.1 0 0 0 1 .8 65.3 65.3 0 0 1 3.2 6.1 1.1 1.1 0 0 0 2-.2l4.2-23.4.3.6a.9.9 0 0 1 1.5-.2v-1.4a.8.8 0 0 1 1.7 0v.7a.7.7 0 0 1 .6.4 35 35 0 0 0 3.4 5.2.8.8 0 0 1 1.3.2c.8 1.6 1.9 3 2.7 4.6a.8.8 0 0 1-.1 1 24 24 0 0 1 3.2 3l2.3 1.9a1.3 1.3 0 0 0 1.2.2c1 1.3 1.8 2.6 2.7 4a1.1 1.1 0 0 0 2-.6c.8-6.2 1.7-12.6 1.9-18.9a7.3 7.3 0 0 1 .8-1.3c0-1.3 0-2.8.2-4.5l.5-4.5 1.6-13.3c.5-3.4 1-6.9 1.3-10.4.2-3.1-1.6-5.2-3.5-7.7zM191.7 155l-.8-1.6a1 1 0 0 0 .2-.1 1.5 1.5 0 0 1 1-.4zm.5-2.5a.4.4 0 0 0-.2-.2c-.1 0-.1-.2 0-.4h.3l-.1.5zm4.9-59v-.8l.1-.6.4 1.5a1.2 1.2 0 0 0-.5 0zm1.4 6l-.3-1v-.3c0-.1 0 0 0 0a1 1 0 0 0 .3.6l.2 1zm5.7 19.8l-.9-4.3a403.2 403.2 0 0 1 1.5 4.5.6.6 0 0 0-.6-.2zm1.2 4.4v.8l-.5-2v-1a13.3 13.3 0 0 1 .8 1.7.5.5 0 0 0-.3.5zm1.2 4.4l-.2-.2a.7.7 0 0 0 .2-.3zm-.2-2.5a14 14 0 0 1 .2 1.6 11.9 11.9 0 0 1-.2-1.5zm.3 5l-.3-1.4a3.9 3.9 0 0 0 .5.2.5.5 0 0 0 .7-.4 12 12 0 0 0 0-1.6l.4 1.4a13.1 13.1 0 0 1-1.3 1.8zm4-16.5a6.3 6.3 0 0 0 0 1.3 3 3 0 0 0 0 .7v1.1c0 .2 0 0 0 0v.1a.1.1 0 0 1 0-.1 2.3 2.3 0 0 1 0-.8v-2.1s.1 0 0 0v-.8a.2.2 0 0 0 0-.2v-.4c0-.1.1 0 0-.1v-.1a2 2 0 0 0 0-.2V109.2l.1 1.8.2 3.3h-.3zm7.9 36.6v-1.5a1.4 1.4 0 0 0 .2-.2zm2.8-53.6a.7.7 0 0 0 0-.2V96.6a1.5 1.5 0 0 0 0-.2v-.1c0-.1-.1 0 0-.1v1zm2.8 7.4l-.7 5.4v-4.6a.4.4 0 0 0 0-.1 6.3 6.3 0 0 0 0-2.4 6 6 0 0 1 .4-1.7l-.5-1v-2l.7 1.2c.8 1.5.3 3.5.1 5.2zm166.2-37.2a1 1 0 0 0-1-.7 1 1 0 0 0-.7 1.9 4 4 0 0 1-.4.2 1.1 1.1 0 0 0-.7-.3h-.3a.6.6 0 0 0-.8-.5h-.2a.6.6 0 0 0-.5-.3c-3.3.4-6.4 1.9-9.4 3.2l-2 .8a.7.7 0 0 0-1-.4 8 8 0 0 0-1.1.7.6.6 0 0 0-.6-.1 175 175 0 0 0-14 6.2l-1.5.4-4.9 1.5a23.2 23.2 0 0 0-5 1.7.8.8 0 0 0 0 1.5 107.2 107.2 0 0 1-11 4.1 1 1 0 0 0 .5 1.9l-.6.5a6.8 6.8 0 0 0-1.5 2.5l.4 1a1 1 0 0 0 0 .3c-.3 8.4 0 17 .3 25.4l-.8.2a55.5 55.5 0 0 1-9.1 1.6 52.4 52.4 0 0 1-5.5.2 1.1 1.1 0 0 0-.7-.6l-.5-.2-3.6-2.7a36.7 36.7 0 0 1-3.5-4.5v-.2a11.1 11.1 0 0 1 1-1.2l.8-1.1a4 4 0 0 0 .7-1.3 28.7 28.7 0 0 1 2.6-3.3 130.6 130.6 0 0 0 9.5-11 27 27 0 0 0 2.2-3.2 11.6 11.6 0 0 1 .2-1.8c0-.5.2-1 .3-1.4a4.2 4.2 0 0 0-1-1.7 6 6 0 0 0-1.3-.8l-1.3-.7a4.1 4.1 0 0 1-1.3-1.2 2.7 2.7 0 0 1-1.9-.7c-.5-.4-1-.9-1.7-1.3a18.3 18.3 0 0 0-1.5 1.3 8.6 8.6 0 0 1-1.7 1.2c0 .4.2.6.4.6s.3.2.4.5l-.8-.1a1.5 1.5 0 0 0-1 .2 458 458 0 0 1-8.2 9.7 29 29 0 0 0-3.5 5l-1.5 2-1.7 2.3-1 1.2V103l.2-4.6-.2-7.6a11 11 0 0 0-1.2-5.2l.3-4a1 1 0 0 0-1.6-1 1.1 1.1 0 0 0-1.9-1l-1.9 2.6q-2.1 1.5-4 3.2c-3.4-.5-3.9 2.6-3.9 5.3a1 1 0 0 0 0 1.1v1.5l.1 4.1a6.5 6.5 0 0 1-.7 2.3 53.3 53.3 0 0 1 .2 7.6l-.2 4.7-2-2.2-12.6 4.8-1 .2a3.9 3.9 0 0 0-.8.4 2.7 2.7 0 0 0-.8 0 28.6 28.6 0 0 1-1.9-3.5l-1.7-4-1.1-2.8-1.3-2.8-1-3.2-.2-.3c-.3-3.5-2.5-6.3-4.3-9.3l-.5-1.1-1.3 1.6 1 1.8-1-.2v-.2a.8.8 0 0 0-.4-.6.8.8 0 0 0 0-.1l-1 1.6a2 2 0 0 1-2.7.7l-5.3-2.6a6 6 0 0 0-.9-.3l-5 11-.5.3a18.5 18.5 0 0 0-1 3l-.2.5-1.4 3a1.1 1.1 0 0 0 .3 1.4l-.1.6a27.3 27.3 0 0 1-1 2.7 2.3 2.3 0 0 0 0 .8 2.3 2.3 0 0 0 .3.6l-.7 3-.7 2.8-.3 1.6v.1c0 .1 0 0 0 0v.4c-.2 0 0 .1-.2.2s0 .1 0 .2a1.1 1.1 0 0 1 0 .3v.5c0 .1-.2.1 0 .1 0 .2 0 .4-.2.6v.4c0 .1 0 .1 0 0a2 2 0 0 1 0 .3V124.6c.1.1 0 0 0 0v.5c0 .1-.1 0 0 .1v.8a.6.6 0 0 1-.1.2l-.1.5v.1l-.4 1.6q-1 4.2-1.6 8.8l.2 1.4-.7.9 1 .7a.4.4 0 0 1 0 .2v.1c0 .1-.1 0 0 .1v.4s-.1 0 0 0v.2a.4.4 0 0 0 0 .2v.3a1.2 1.2 0 0 1 0 .1v.2c0 .3 0 .5-.2.6h.1v2.1c0 .1 0 0 0 0v.2c0 .2 0 0 0 0v.5c0 .1 0 0 0 0v1.5a13 13 0 0 0 0 2 .1.1 0 0 1 0 .2h-.1a2.6 2.6 0 0 1 0 .7V148.9h-.1a4.6 4.6 0 0 0 0-1 2 2 0 0 0 0-.5 2.1 2.1 0 0 1 0-.3v-.4a2 2 0 0 1 0-.5v-.7a.5.5 0 0 0 0-.1v-.1.9-.2h-.2v.3a2.9 2.9 0 0 0 0 .7 1.4 1.4 0 0 1 0 .3v2.4a.1.1 0 0 1 0 .2.3.3 0 0 0 0 .1v.1a.1.1 0 0 0 .1.1.2.2 0 0 1 0 .2.1.1 0 0 1 0 .1h.1a1.3 1.3 0 0 0 0 .5h-.9v-.4a.2.2 0 0 0 0-.1v-.1a1.5 1.5 0 0 1 0-.5v-.6.3l.1.2c.1 0 0-.2 0-.2v.4a2.9 2.9 0 0 0 .1.3v.1a.7.7 0 0 1 0 .3 1 1 0 0 1 0 .3v.1l.1-.1c.1-.1 0 0 0 0v-.2a.2.2 0 0 1 0 .2c.1 0 0 .2 0 .2a3.4 3.4 0 0 0 .2.8v.1a.7.7 0 0 1 0 .4h.2c-.1 0 0-.2 0-.2v-.1l.1.1c.1 0 0 0 0 .1a3.4 3.4 0 0 1 0-.5s.2 0 0 0 .1 0 0-.2v-.3a4.5 4.5 0 0 0 .9 1.9 2.9 2.9 0 0 0 3 1.1 51.1 51.1 0 0 0 5.8 5.3c.6.5 2 .3 1.9-.8-.7-5.6.5-11.1 1.5-16.6a50.6 50.6 0 0 0 .9-7.6l.1-2.7a25.8 25.8 0 0 0 2.3 4.6c.7.9 2.3.4 2-.8a.9.9 0 0 0 0-.2 84.8 84.8 0 0 1 8.5-3.5l2.3-.7 1 3 .2.4a1.7 1.7 0 0 1 1.5.5l.1.1a131.4 131.4 0 0 1 3.1 15 .5.5 0 0 0 .9.3c1.3-1.4 1.7-3.5 2.3-5.4l2.2-4.8a9.2 9.2 0 0 0 .6-.7 10.7 10.7 0 0 0 1.6-3l.3-.6.4-.5a.4.4 0 0 0-.1-.6 12.8 12.8 0 0 0 .2-1.3l.1-.4v-.3a19.2 19.2 0 0 0 .5-2.2 1.1 1.1 0 0 0-1.4-1.3l-.8-2.3a5.3 5.3 0 0 1-.5-1l-.3-1c1.1-.8 4.8-.5 5.6-1.5a73 73 0 0 1 6.8-3.5c.1 1.2.2 8.4.4 9.5a6.3 6.3 0 0 1-.5.4c-.2.1-.2.3 0 .7l.3.3.5.6v.2a2.7 2.7 0 0 1-.7.3 1.4 1.4 0 0 0 0 1 8.7 8.7 0 0 0 .6.8 4 4 0 0 1 .3.5l.1 1.1a2.4 2.4 0 0 1-.1.2l.1.1c.3 2.5.7 5 .8 7.5l-.2 1a1.2 1.2 0 0 0 .2.9 24 24 0 0 1-.2 3.4l-.6 1c-.7 1.2 1 2.5 1.8 1.5a1.1 1.1 0 0 0 .7-.6l1.2-2-.7 1.6c-.7 1.3 1.3 2.5 2 1.2l3.6-7.3a3.5 3.5 0 0 0 .5 0 8.8 8.8 0 0 0 2.9-4 49 49 0 0 0 1.5-5l.6-2 3-6a9.8 9.8 0 0 0 2.1 1.5 49.7 49.7 0 0 0 9.7 3 11.7 11.7 0 0 0 1.2.4 2.3 2.3 0 0 0 .6 0l2.3.5a.6.6 0 0 0 .2.2 19 19 0 0 0 3.9.5 20.3 20.3 0 0 0 4.5 0l1.8-.3c1.9 0 4-.3 5.3-.5l.2 3a1.4 1.4 0 0 0-.2.4 4.3 4.3 0 0 0 .8 4.4v.1l-.1 1.3c0 1.5-.3 4.3 1 5.4a1.6 1.6 0 0 0 .1.2c.2 1.3.5 2.8 2 2.9a13.6 13.6 0 0 0 3.4-.8l4.5-1.2 5.7-1.4a57.8 57.8 0 0 0 7.2-1.4c2-.5 4-1.3 5.8-2l7.2-1.9c1.3-.3 1-2.4-.3-2.3a24.2 24.2 0 0 0-4.5 1 20.3 20.3 0 0 0 4-1.7 8.8 8.8 0 0 0 1.6-1 23.4 23.4 0 0 1 .9-5.6l.9-3a2.5 2.5 0 0 0-.6-.8 1.5 1.5 0 0 1-1.3-.2 9.5 9.5 0 0 1-1-1l-1.3-1a3 3 0 0 0-1.3-.9 16.6 16.6 0 0 1-3.8 1.5 9 9 0 0 0-3.5 1.8 25.8 25.8 0 0 0-4.2.6l-3.2.8q-1.5.5-3.3.8a6.3 6.3 0 0 1-2.5-.4v-9.4a6.2 6.2 0 0 0 1.8 0 4.4 4.4 0 0 1 2.2.1 2.3 2.3 0 0 1 1.7-.5 2.8 2.8 0 0 0 1.4-.2l.6-.1a.6.6 0 0 0 .3 0h.6a9.4 9.4 0 0 0 3.4-.8l.3-.2c.4 0 .9-.2 1.3-.4l.2-.1a1.1 1.1 0 0 0 2 .2 1 1 0 0 0 1-1l-.1-2c0-.2.2-.3.3-.4l2.1-2.4a3.9 3.9 0 0 0-.1-1.8 6.8 6.8 0 0 0-.8-1.5 2.1 2.1 0 0 1-1.4-.2c0-1.1 0-2.2.2-3.4a1 1 0 0 0-.3-.8 1.2 1.2 0 0 0-1.9-.1v.3a1 1 0 0 0-.3 0 1.2 1.2 0 0 0-1.2-.4l-2.7.7-4.2.8a30.4 30.4 0 0 1-6.2.8c-.2-.3 1.3-6.5 1.2-7v-.3c3.2-1.4 6.3-3.2 9.4-4.7q6-2.7 12.1-5l9.3-3.4a.8.8 0 0 1 .4-1.1 58.1 58.1 0 0 1 6-2.1c.4-.2 1.2-.6 2-.8l.4-1.4a9.8 9.8 0 0 1-1.2.2 6.3 6.3 0 0 1-1.4.1 1.1 1.1 0 0 1-.8-1.8.8.8 0 0 0 .3.3 1.1 1.1 0 0 0 .4.1h.1c-.2 0 0 0 0 0a.8.8 0 0 0 .5 0h.1a1.7 1.7 0 0 0 .3-.1 1.4 1.4 0 0 0 .7-1.2 1 1 0 0 0-.8-1 1 1 0 0 0-1 .6 1 1 0 0 0-.6 1 9.4 9.4 0 0 1-1.5.3c-1.2 0-1.4-1.4-.6-2a11.6 11.6 0 0 1 2-1 1.2 1.2 0 0 1 0-1.4 11 11 0 0 1-1.4.3 1.4 1.4 0 0 1-1.4-.7h.1a3.3 3.3 0 0 0 1.5.1c1 .5 2.2-.7 2-1.8a2 2 0 0 0-1.6-1.3 3.4 3.4 0 0 0-.5 0 96 96 0 0 1 3.3-1.8.9.9 0 0 0 .5-.2l1.8-1 3.7-1.8.7-.4.6-1.5-4.8 1.9zm-150 89l-1.2-1.3a1 1 0 0 0 1-.8l.1-.5a.6.6 0 0 0 .2 0v2.5zm8.5-22.5l-.5-1 .7.1h1.2a13.8 13.8 0 0 0-1.4 1zm3.5-13.3l-4.4.9a5.3 5.3 0 0 1-.8.2 5 5 0 0 0-1 .2l.6-1.7.7-1.6a39.9 39.9 0 0 1 1.6-4.5 30.8 30.8 0 0 1 2.3-4.4l.2-.9a178 178 0 0 1 5 10.6 40.5 40.5 0 0 1-4.2 1.2zm10 10.3l.3-.1a7.8 7.8 0 0 1 .2 1.3zm4.8 18.1q-.9-5.4-2.1-10.7a36.1 36.1 0 0 1 1.4 4v1.8a.5.5 0 0 0 .7.5l.7 2.5a10.1 10.1 0 0 1-.7 2zm22.6-5.8a.8.8 0 0 0-.2-.1l.2-.8a.8.8 0 0 0 .3-.1l.1.3zm14.7-17.5a1 1 0 0 1 .4.3l.6.4a7 7 0 0 1-1-.7zm34.2 16.5a4.4 4.4 0 0 1-.7-2l.6.6a6.2 6.2 0 0 1 .1 1.2zm13.7 1.9a27.8 27.8 0 0 0 3.2-.7c1.6-.4 3-.8 4.2-1.3a2.7 2.7 0 0 1 1 .1l-9.5 2.5c.3-.3.7-.5 1-.6zm6.7-64.2l-.9.2-.4.2v-.1l1.6-.5zm18-4.8a.1.1 0 0 0-.1 0l-.4.1s0 .1 0 0h-.2a.7.7 0 0 0-.1.2c0-.1-.2 0-.2 0h-.2a.7.7 0 0 0 .2-.2l.3-.1 1.4-.4zm6.1 1.7l.3-.1a.1.1 0 0 1 .1 0l-.2.2h-.1l-.2.1c-.2.1 0 0-.1 0h-.1zm1.6-6.2l-5 2.6-3.7 1.9a1 1 0 0 0 0-.7 84.8 84.8 0 0 0 10.2-4.8 1 1 0 0 0 .1.3l-1.5.7zM377.2 90zm1-.2z\"></path>\r\n    <path d=\"M381.9 88.7c.1 0 0-.2 0 0zm10-16.5a.9.9 0 0 0-1.5 0 1.1 1.1 0 0 0-.1.7.9.9 0 0 0 1.8 0 1 1 0 0 0-.2-.7zm-280.7 99.1a5.2 5.2 0 0 0 1.3-1.1c-.8.5-1.7 1-2.5 1.7l1.3-.6z\"></path>\r\n    <path d=\"M184.5 76.6l-1 1.4a1 1 0 0 0-1.3-.5l-.4.2a1.1 1.1 0 0 0-.5-1 .8.8 0 0 0-.1-1 .8.8 0 0 0-.4-1 1.6 1.6 0 0 0-1-.3.8.8 0 0 0-.3-.9l2-1.2a1 1 0 0 1 0-.4 3 3 0 0 1 1-1l-3.5 2.4a1.7 1.7 0 0 0-1 .1 1.1 1.1 0 0 0-.8 0 1 1 0 0 0-.7 1l-5 3-.2.1a2 2 0 0 0-.5 0 2 2 0 0 0-1.2 1l-3.3 2.2a26.6 26.6 0 0 0-4.4 3l-1.4.7 1-.8c3.4-2.5 7.1-5 10.3-7.7.6-.6-.2-1.6-1-1.2a94.6 94.6 0 0 0-11 7.4l-10.6 8c-7 5.2-14 10.6-20.4 16.4a1 1 0 0 0-.4.7 17.3 17.3 0 0 0-4.2 3.5v.1c.7 4.8 4.2 8.4 6.4 12.7a110.5 110.5 0 0 1 14.3 3q2.3.6 4.5 1.4a12.5 12.5 0 0 1 4.3 2c2 1.8 1.7 4.7 1 7.2a43.9 43.9 0 0 1-6 5.6l-7.5 3.7-6.4 3.5a2 2 0 0 1 0 .3l-3.5 1.4a68.3 68.3 0 0 0-7.7 3.1.8.8 0 0 0 .3 1.6.8.8 0 0 0 .8 1.1 36.4 36.4 0 0 0 6.5-2.7l.4-.2c-4.9 4.3-10.5 7.7-16 11.3-2.2 1.5-4.5 3-6.7 4.7a.8.8 0 0 1 .2.2 74.2 74.2 0 0 1 11.4-6.5c.9-.4 1.8.7 1 1.3-2 1.9-4.5 3.4-6.3 5.5l.7-.2h.3l.1-.2.4-.1a38.7 38.7 0 0 1 5-2.9 1.3 1.3 0 0 1 1.6.7 2.4 2.4 0 0 0 .2-.2.6.6 0 0 0 .2 0l1.5-.7-1.9 1a.8.8 0 0 1-.3 1l-.3.1a11.7 11.7 0 0 0 1.4-.7l.6-.3c.8-.6 1.6.6 1 1.2 2.7-1.5 5.4-2.9 8.2-4.2a.9.9 0 0 0 0 .6l-.5.3a.5.5 0 0 0 .3 1 62.6 62.6 0 0 0 6.3-2l4.4-2.6.6-.4a9 9 0 0 1 2.3.1.5.5 0 0 0 .7-.5 2.7 2.7 0 0 1 0-.6c-.2.4.4 1 .8.5a9.1 9.1 0 0 1 1.3-1.2 36.4 36.4 0 0 0 6.5-3.5 17.7 17.7 0 0 0 3.2-1.9l1.9-1.4a33.8 33.8 0 0 0 2.8-2l.9-.7a13.9 13.9 0 0 0 2.2-1.7 19 19 0 0 1 2-1.5.5.5 0 0 0 .3-.6l.8-1.4a25.9 25.9 0 0 0 2.8-6.7 21.4 21.4 0 0 0 .6-7.7 10.7 10.7 0 0 0-1.2-4l-1-2.1c-.7-1.1-1.2-2.4-2-3.3a23.8 23.8 0 0 0-5.3-5 33 33 0 0 0-6.7-3.3c-2.3-.9-5.4-1.2-7.3-2.6a1.1 1.1 0 0 1-.3-.4l13.8-9c5.6-3.7 11.5-7.3 17-11.4l3.7-2a2.7 2.7 0 0 0 0-.2 1.9 1.9 0 0 1-1.3-1.6 2 2 0 0 1-.7-1.3.8.8 0 0 0 .3-.1 6.8 6.8 0 0 0 1.4-3.6 1 1 0 0 0 1.5-.3l.1-.8a1 1 0 0 0-1-1l1-2a.9.9 0 0 0-1.6-1zm-36.8 47.9a1.2 1.2 0 0 0-.2.2l-2.8-.8 1.8.3 1.4.2zm-10.2 40.4l1.3-.7a63.7 63.7 0 0 1-1.3.7zm16.3-8.6l-.3.3-.6.2.1-.1zm7.7-27a4 4 0 0 1 .1 3 11.9 11.9 0 0 0-.1-3zm4.6 19.8l-1.3 1-.6.4.4-.5 1.5-1zM147.2 160l-1.1.6h-.3l1.4-.5zm2-15.1a3 3 0 0 1 .4-.2l.3-.2h.3a2.7 2.7 0 0 0 .4-.2h.2a.6.6 0 0 1 .2-.1l-.3.2h-.1c-.2.2-.5.2-.7.3a2.8 2.8 0 0 1-.4.2l-.5.2zm13.5-16.6l-.2.9a6.5 6.5 0 0 0-1.3-1.1zm-4.8-2a9.2 9.2 0 0 1 .7 1.4 9.2 9.2 0 0 0-1-1.1 1.7 1.7 0 0 0 .3-.4zm-.9 11.2l1-1.4-.8 1.2-.2.2zm-1.6-10a13 13 0 0 1 .4 1.4 6.6 6.6 0 0 0-1.5-1.4 8.6 8.6 0 0 0 1-.1zm-2.8-4.3a5 5 0 0 1 .5.4l-1.5-.6zm24-39a1.4 1.4 0 0 1-1.4-.8h.1a1.1 1.1 0 0 0 .3-.6.9.9 0 0 0 0-.3.7.7 0 0 0 .2-.2.9.9 0 0 0 0-1 1 1 0 0 0 .7-.3 1.1 1.1 0 0 0 .2-.4l.5-.2a2.3 2.3 0 0 0-.6 1 .7.7 0 0 0 .7.9 1 1 0 0 0 .1 1 1 1 0 0 0 1.2.2 1.4 1.4 0 0 0 .3-.1l.2-.1.3-.2a1 1 0 0 0 .5.5 18.8 18.8 0 0 1-3.2.5zm4.5-4a2.4 2.4 0 0 1-.1.3v.1a1.1 1.1 0 0 0 0 .2 1 1 0 0 0-.2-.4l.5-.4a.9.9 0 0 0-.2.2zm1.3-.5a1 1 0 0 0-.3.1 1 1 0 0 0-.5 0l1-.5zm4.8-6.8l-.1-.1a1 1 0 0 0-.8-.5 1 1 0 0 0-.7.3 1 1 0 0 0-.3.7 1 1 0 0 0 .5.8v.1a1 1 0 1 0 1.4-1.3z\"></path>\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport raw from \"raw.macro\";\r\n\r\nimport Editor from \"@monaco-editor/react\";\r\nimport { editor } from \"monaco-editor\";\r\n\r\nimport Board from \"./Board\";\r\nimport * as engine from \"./engine\";\r\nimport * as code from \"./code\";\r\nimport { tutorials } from \"./tutorial\";\r\nimport { Logo } from \"./ui\";\r\n\r\nimport \"@primer/css/dist/primer.css\";\r\nimport \"./index.css\";\r\n\r\ninterface AppState {\r\n  code: string;\r\n  tutorial: number;\r\n  running?: boolean;\r\n  cancelled?: boolean;\r\n  frame: engine.Frame;\r\n  error?: Error;\r\n}\r\n\r\nconst basicSnake = raw(\"./examples/basic.js\");\r\nconst placeholder = raw(\"./examples/placeholder.js\");\r\n\r\nclass App extends React.Component<{}, AppState> {\r\n  initial = localStorage.getItem(\"code\") || placeholder;\r\n  editor: editor.IStandaloneCodeEditor | undefined;\r\n  state: AppState = {\r\n    tutorial: parseInt(localStorage.getItem(\"step\") || \"0\"),\r\n    code: this.initial,\r\n    frame: engine.initialFrame,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    setTimeout(this.handleStart, 1000);\r\n  };\r\n\r\n  cancelled = () => !!this.state.cancelled;\r\n\r\n  handleInit = () => {\r\n    if (!this.editor) {\r\n      return;\r\n    }\r\n    this.editor.onDidChangeModelContent(() => {\r\n      this.handleCodeChange(this.editor!.getValue());\r\n    });\r\n  };\r\n\r\n  handleSetTutorial = (change: number) => {\r\n    const tutorial = this.state.tutorial + change;\r\n    this.setState({ tutorial });\r\n    localStorage.setItem(\"step\", tutorial.toString());\r\n  };\r\n  handleNext = () => this.handleSetTutorial(1);\r\n  handlePrev = () => this.handleSetTutorial(-1);\r\n\r\n  handleCodeChange = (code: string) => {\r\n    localStorage.setItem(\"code\", code);\r\n    this.setState({ code });\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      cancelled: true,\r\n      running: false,\r\n      frame: engine.initialFrame,\r\n    });\r\n  };\r\n\r\n  handleStop = () => {\r\n    this.setState({ cancelled: true, running: false });\r\n  };\r\n\r\n  handleStart = () => {\r\n    if (this.state.running) {\r\n      return;\r\n    }\r\n    this.setState({ running: true });\r\n    this.run();\r\n  };\r\n\r\n  run = background(async () => {\r\n    this.setState({ cancelled: false });\r\n    try {\r\n      const js = this.state.code === placeholder ? basicSnake : this.state.code;\r\n      const snake = code.evaluate(js);\r\n      await engine.run(snake, this, (frame) => {\r\n        this.setState({ frame, error: undefined });\r\n      });\r\n      this.setState({ running: false });\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setState({ error, running: false });\r\n    }\r\n  });\r\n\r\n  render() {\r\n    const { tutorial, error, code, running, frame } = this.state;\r\n    const Tutorial = tutorials[tutorial];\r\n    return (\r\n      <>\r\n        <header className=\"Header bg-gray-dark\">\r\n          <div className=\"Header-item\">\r\n            <a href=\"https://battlesnake.com\" target=\"_blank\">\r\n              <Logo />\r\n            </a>\r\n          </div>\r\n          <div className=\"Header-item Header-item--full f3 text-mono\">\r\n            Learn to Battlesnake!\r\n          </div>\r\n          <div className=\"Header-item\">\r\n            <a\r\n              target=\"_blank\"\r\n              href=\"https://github.com/Nettogrof/battlesnake-learn\"\r\n            >\r\n              Contribute on GitHub\r\n            </a>\r\n          </div>\r\n        </header>\r\n        <main className=\"height-page d-flex flex-content-stretch\">\r\n          <div className=\"flex-1 bg-gray-light height-page d-flex flex-column\">\r\n            <Tutorial\r\n              code={code}\r\n              next={\r\n                tutorial < tutorials.length - 1 ? this.handleNext : undefined\r\n              }\r\n              prev={tutorial > 0 ? this.handlePrev : undefined}\r\n            />\r\n          </div>\r\n          <div className=\"flex-1 bg-vs-dark height-page overflow-hidden\">\r\n            <Editor\r\n              height=\"100%\"\r\n              value={this.initial}\r\n              editorDidMount={(_, ref) => {\r\n                this.editor = ref;\r\n                this.handleInit();\r\n              }}\r\n              language=\"javascript\"\r\n              theme=\"dark\"\r\n              options={{\r\n                minimap: { enabled: false },\r\n                scrollbar: { vertical: \"hidden\", verticalScrollbarSize: 0 },\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"flex-1 bg-vs-dark height-page border-left\">\r\n            <div className=\"p-2 height-page\">\r\n              <div className=\"text-center text-red\" style={{ height: \"25px\" }}>\r\n                {error && error.message}\r\n              </div>\r\n              <Board\r\n                food={frame.food}\r\n                columns={frame.game.width}\r\n                rows={frame.game.height}\r\n                snakes={[frame.snake]}\r\n              />\r\n              <div className=\"BtnGroup d-flex flex-justify-center mt-3\">\r\n                {!running && (\r\n                  <button\r\n                    className=\"btn BtnGroup-item\"\r\n                    onClick={this.handleStart}\r\n                  >\r\n                    Play\r\n                  </button>\r\n                )}\r\n                {running && (\r\n                  <button\r\n                    className=\"btn BtnGroup-item\"\r\n                    onClick={this.handleStop}\r\n                  >\r\n                    Pause\r\n                  </button>\r\n                )}\r\n                <button\r\n                  className=\"btn BtnGroup-item\"\r\n                  onClick={this.handleReset}\r\n                >\r\n                  Reset\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction background(fn: () => void) {\r\n  return () => setTimeout(fn, 0);\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","export interface Code {\r\n  move: (req: any) => { move: string };\r\n  start: (req: any) => { color: string };\r\n}\r\n\r\n/**\r\n * Code evaluates code and turns it into two functions that can be called.\r\n */\r\nexport function evaluate(code: string): Code {\r\n  const callable = new Function(\r\n    `${code};\\n return { move: move, start: start }`\r\n  )();\r\n  return callable;\r\n}\r\n"],"sourceRoot":""}